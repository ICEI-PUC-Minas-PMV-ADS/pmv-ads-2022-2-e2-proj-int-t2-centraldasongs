// <auto-generated />
using System;
using CentralOngs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CentralOngs.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221025032052_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CentralOngs.Models.AddressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserOngId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserVoluntarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("State");

                    b.HasIndex("UserOngId")
                        .IsUnique()
                        .HasFilter("[UserOngId] IS NOT NULL");

                    b.HasIndex("UserVoluntarioId");

                    b.ToTable("address");
                });

            modelBuilder.Entity("CentralOngs.Models.BankAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("Branch")
                        .HasColumnType("int");

                    b.Property<long>("UserOngId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("UserOngId")
                        .IsUnique();

                    b.ToTable("bank_account");
                });

            modelBuilder.Entity("CentralOngs.Models.BankModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("CentralOngs.Models.StateModel", b =>
                {
                    b.Property<string>("Uf")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Uf");

                    b.ToTable("ufs");
                });

            modelBuilder.Entity("CentralOngs.Models.UserOngModel", b =>
                {
                    b.Property<long>("Cnpj")
                        .HasColumnType("bigint");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Cnpj");

                    b.ToTable("UserOngModel");
                });

            modelBuilder.Entity("CentralOngs.Models.UserVoluntarioModel", b =>
                {
                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateBirthDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Cpf");

                    b.ToTable("user_voluntario");
                });

            modelBuilder.Entity("CentralOngs.Models.AddressModel", b =>
                {
                    b.HasOne("CentralOngs.Models.StateModel", "StateModel")
                        .WithMany("Id")
                        .HasForeignKey("State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralOngs.Models.UserOngModel", "UserOngModel")
                        .WithOne("Address")
                        .HasForeignKey("CentralOngs.Models.AddressModel", "UserOngId");

                    b.HasOne("CentralOngs.Models.UserVoluntarioModel", "UserVoluntarioModel")
                        .WithMany()
                        .HasForeignKey("UserVoluntarioId");

                    b.Navigation("StateModel");

                    b.Navigation("UserOngModel");

                    b.Navigation("UserVoluntarioModel");
                });

            modelBuilder.Entity("CentralOngs.Models.BankAccountModel", b =>
                {
                    b.HasOne("CentralOngs.Models.BankModel", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralOngs.Models.UserOngModel", "UserOng")
                        .WithOne("BankAccount")
                        .HasForeignKey("CentralOngs.Models.BankAccountModel", "UserOngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("UserOng");
                });

            modelBuilder.Entity("CentralOngs.Models.StateModel", b =>
                {
                    b.Navigation("Id");
                });

            modelBuilder.Entity("CentralOngs.Models.UserOngModel", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("BankAccount")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
