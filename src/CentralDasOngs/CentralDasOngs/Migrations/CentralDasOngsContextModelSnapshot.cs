// <auto-generated />
using System;
using CentralDasOngs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CentralDasOngs.Migrations
{
    [DbContext(typeof(CentralDasOngsContext))]
    partial class CentralDasOngsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CentralDasOngs.Models.AdressModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Complement")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("varchar(450)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<long?>("UserOngId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserVoluntarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("State");

                    b.HasIndex("UserOngId")
                        .IsUnique()
                        .HasFilter("[UserOngId] IS NOT NULL");

                    b.HasIndex("UserVoluntarioId")
                        .IsUnique()
                        .HasFilter("[UserVoluntarioId] IS NOT NULL");

                    b.ToTable("adress");
                });

            modelBuilder.Entity("CentralDasOngs.Models.BankModel", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(max)");

                    b.HasKey("Code");

                    b.ToTable("banks");
                });

            modelBuilder.Entity("CentralDasOngs.Models.OngBankInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("Agency")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<long>("UserOngId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("UserOngId")
                        .IsUnique();

                    b.ToTable("ong_bank_information");
                });

            modelBuilder.Entity("CentralDasOngs.Models.StateModel", b =>
                {
                    b.Property<string>("Uf")
                        .HasColumnType("varchar(450)");

                    b.HasKey("Uf");

                    b.ToTable("ufs");
                });

            modelBuilder.Entity("CentralDasOngs.Models.UserOngModel", b =>
                {
                    b.Property<long>("Cnpj")
                        .HasColumnType("bigint");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Cnpj");

                    b.ToTable("user_ong");
                });

            modelBuilder.Entity("CentralDasOngs.Models.UserVoluntarioModel", b =>
                {
                    b.Property<long>("Cpf")
                        .HasColumnType("bigint");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DateBirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Cpf");

                    b.ToTable("user_voluntario");
                });

            modelBuilder.Entity("CentralDasOngs.Models.AdressModel", b =>
                {
                    b.HasOne("CentralDasOngs.Models.StateModel", "StateModel")
                        .WithMany("Id")
                        .HasForeignKey("State");

                    b.HasOne("CentralDasOngs.Models.UserOngModel", "UserOngModel")
                        .WithOne("AdressModel")
                        .HasForeignKey("CentralDasOngs.Models.AdressModel", "UserOngId");

                    b.HasOne("CentralDasOngs.Models.UserVoluntarioModel", "UserVoluntarioModel")
                        .WithOne("AdressModel")
                        .HasForeignKey("CentralDasOngs.Models.AdressModel", "UserVoluntarioId");

                    b.Navigation("StateModel");

                    b.Navigation("UserOngModel");

                    b.Navigation("UserVoluntarioModel");
                });

            modelBuilder.Entity("CentralDasOngs.Models.OngBankInformation", b =>
                {
                    b.HasOne("CentralDasOngs.Models.BankModel", "Bank")
                        .WithMany("Id")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CentralDasOngs.Models.UserOngModel", "UserOng")
                        .WithOne("OngBankInformation")
                        .HasForeignKey("CentralDasOngs.Models.OngBankInformation", "UserOngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("UserOng");
                });

            modelBuilder.Entity("CentralDasOngs.Models.BankModel", b =>
                {
                    b.Navigation("Id");
                });

            modelBuilder.Entity("CentralDasOngs.Models.StateModel", b =>
                {
                    b.Navigation("Id");
                });

            modelBuilder.Entity("CentralDasOngs.Models.UserOngModel", b =>
                {
                    b.Navigation("AdressModel");

                    b.Navigation("OngBankInformation");
                });

            modelBuilder.Entity("CentralDasOngs.Models.UserVoluntarioModel", b =>
                {
                    b.Navigation("AdressModel");
                });
#pragma warning restore 612, 618
        }
    }
}
